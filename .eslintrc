{
    "rules" : {
        // TS lint
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": ["error", {
            "functions": false,
            "classes": true,
            "variables": true,
            "enums": true,
            "typedefs": true,
            "ignoreTypeReferences": true
        }],
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/member-delimiter-style": ["error", {
            "multiline": {
                "delimiter": "semi",
                "requireLast": true
            },
            "singleline": {
                "delimiter": "comma",
                "requireLast": false
            },
            "multilineDetection": "brackets"
        }],
        "@typescript-eslint/no-duplicate-enum-values": "error",
        "@typescript-eslint/type-annotation-spacing": ["error", {
            "before": false,
            "after": true,
            "overrides": {
                "arrow": {
                    "before": true,
                    "after": true
                }
            }
        }],
        "@typescript-eslint/typedef": [
            "error",
            {
                "arrowParameter": true,
                "variableDeclaration": false
            }
        ],
        "@typescript-eslint/comma-dangle": ["error", {
            "arrays": "always-multiline",
            "objects": "always-multiline",
            "imports": "always-multiline",
            "exports": "always-multiline",
            "enums": "always-multiline",
            "generics": "always-multiline",
            "tuples": "always-multiline",
            "functions": "never"
        }],
        "@typescript-eslint/quotes": ["error", "single", {
            "avoidEscape": true,
            "allowTemplateLiterals": true
        }],
        "@typescript-eslint/semi": ["error", "always"],
        "@typescript-eslint/brace-style": ["error", "1tbs", {
            "allowSingleLine": true
        }],
        "@typescript-eslint/comma-spacing": ["error", {
            "before": false,
            "after": true
        }],
        "@typescript-eslint/func-call-spacing": ["error", "never"],
        "@typescript-eslint/keyword-spacing": ["error"],
        "@typescript-eslint/lines-between-class-members": ["error", "always", {
            "exceptAfterSingleLine": true
        }],
        "@typescript-eslint/object-curly-spacing": ["error", "always", {
            "arraysInObjects": true,
            "objectsInObjects": false
        }],
        "@typescript-eslint/padding-line-between-statements": ["error",
            {
                "blankLine": "always",
                "prev": "*",
                "next": ["interface", "type", "return", "if"]
            }],
        "@typescript-eslint/space-before-blocks": ["error", "always"],
        "@typescript-eslint/space-before-function-paren": ["error", {
            "anonymous": "always",
            "asyncArrow": "always",
            "named": "never"
        }],
        "@typescript-eslint/space-infix-ops": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/consistent-generic-constructors": ["error", "type-annotation"],
        "@typescript-eslint/consistent-indexed-object-style": ["error", "index-signature"],
        "@typescript-eslint/consistent-type-assertions": ["error", {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow"
        }],
        "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
        "@typescript-eslint/consistent-type-imports": ["error", {
            "prefer": "no-type-imports",
            "disallowTypeAnnotations": true
        }],
        "@typescript-eslint/explicit-function-return-type": ["error"],
        "@typescript-eslint/member-ordering": ["off"], // => customize
        "@typescript-eslint/method-signature-style": ["error", "property"], // => customize
        "@typescript-eslint/naming-convention": ["off", { // => customize
            "selector": "default",
            "format": ["camelCase"]
        }],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-dupe-class-members": "error",
        "@typescript-eslint/no-empty-function": ["error", {
            "allow": ["constructors", "arrowFunctions"]
        }],
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-loss-of-precision": "error",
        "@typescript-eslint/no-this-alias": ["error", {
            "allowDestructuring": true,
            "allowedNames": ["that"]
        }],
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/unified-signatures": "error",

        // Vue lint
        "vue/no-v-text-v-html-on-component": "off",
        "vue/html-indent": ["error", 2, {
            "attribute": 1,
            "baseIndent": 1,
            "closeBracket": 0,
            "alignAttributesVertically": false,
            "ignores": []
        }],
        "vue/max-attributes-per-line": ["error", {
            "singleline": {
                "max": 3
            },
            "multiline": {
                "max": 1
            }
        }],
        "vue/html-self-closing": ["error", {
            "html": {
                "void": "never",
                "normal": "always",
                "component": "always"
            },
            "svg": "always",
            "math": "always"
        }],
        "vue/html-closing-bracket-newline": ["error", {
            "singleline": "never",
            "multiline": "always"
        }],
        "vue/html-closing-bracket-spacing": ["error", {
            "startTag": "never",
            "endTag": "never",
            "selfClosingTag": "always"
        }],
        "vue/singleline-html-element-content-newline": ["error", {
            "ignoreWhenNoAttributes": true,
            "ignoreWhenEmpty": true,
            "ignores": []
        }],
        "vue/multiline-html-element-content-newline": ["error", {
            "allowEmptyLines": false,
            "ignoreWhenEmpty": true,
            "ignores": ["pre", "textarea"]
        }],
        "vue/first-attribute-linebreak": ["error", {
            "singleline": "beside",
            "multiline": "below"
        }],
        "vue/attributes-order": ["error", {
            "order": [
                "CONDITIONALS",
                "DEFINITION",
                "LIST_RENDERING",
                "RENDER_MODIFIERS",
                "GLOBAL",
                "UNIQUE",
                "SLOT",
                "TWO_WAY_BINDING",
                "OTHER_ATTR",
                "OTHER_DIRECTIVES",
                "CONTENT",
                "EVENTS"
            ],
            "alphabetical": false
        }],
        "vue/no-lone-template": ["error", {
            "ignoreAccessible": true
        }],
        "vue/attribute-hyphenation": ["error", "never"],
        "vue/no-v-html": "off",
        "vue/v-slot-style": ["error", {
            "atComponent": "v-slot",
            "default": "v-slot",
            "named": "longform"
        }],
        "vue/v-on-style": ["error", "shorthand"],
        "vue/v-bind-style": ["error", "shorthand"],
        "vue/this-in-template": ["error", "never"],
        "vue/multi-word-component-names": "off",
        "vue/component-definition-name-casing": ["error", "kebab-case"],
        "vue/html-quotes": [ "error", "double", { "avoidEscape": true } ],
        "vue/mustache-interpolation-spacing": ["error", "always"],
        "vue/no-multi-spaces": ["error", {
            "ignoreProperties": false
        }],
        "vue/no-mutating-props": "error",
        "vue/no-parsing-error": ["error", {
            "abrupt-closing-of-empty-comment": true,
            "absence-of-digits-in-numeric-character-reference": true,
            "cdata-in-html-content": true,
            "character-reference-outside-unicode-range": true,
            "control-character-in-input-stream": true,
            "control-character-reference": true,
            "eof-before-tag-name": true,
            "eof-in-cdata": true,
            "eof-in-comment": true,
            "eof-in-tag": true,
            "incorrectly-closed-comment": true,
            "incorrectly-opened-comment": true,
            "invalid-first-character-of-tag-name": true,
            "missing-attribute-value": true,
            "missing-end-tag-name": true,
            "missing-semicolon-after-character-reference": true,
            "missing-whitespace-between-attributes": true,
            "nested-comment": true,
            "noncharacter-character-reference": true,
            "noncharacter-in-input-stream": true,
            "null-character-reference": true,
            "surrogate-character-reference": true,
            "surrogate-in-input-stream": true,
            "unexpected-character-in-attribute-name": true,
            "unexpected-character-in-unquoted-attribute-value": true,
            "unexpected-equals-sign-before-attribute-name": true,
            "unexpected-null-character": true,
            "unexpected-question-mark-instead-of-tag-name": true,
            "unexpected-solidus-in-tag": true,
            "unknown-named-character-reference": true,
            "end-tag-with-attributes": true,
            "duplicate-attribute": true,
            "end-tag-with-trailing-solidus": true,
            "non-void-html-element-start-tag-with-trailing-solidus": false,
            "x-invalid-end-tag": true,
            "x-invalid-namespace": true
        }],
        "vue/no-reserved-props": ["error", {
            "vueVersion": 2
        }],
        "vue/no-setup-props-destructure": "error",
        "vue/no-side-effects-in-computed-properties": "error",
        "vue/no-unused-components": ["error", {
            "ignoreWhenBindingPresent": true
        }],
        "vue/no-unused-vars": "error",
        "vue/no-use-v-if-with-v-for": "error",
        "vue/no-useless-template-attributes": "error",
        "vue/require-component-is": "error",
        "vue/require-prop-type-constructor": "error",
        "vue/require-v-for-key": "error",
        "vue/require-valid-default-prop": "error",
        "vue/return-in-computed-property": "error",
        "vue/valid-attribute-name": "error",
        "vue/valid-next-tick": "error",
        "vue/valid-v-bind": "error",
        "vue/valid-v-if": "error",
        "vue/valid-v-else": "error",
        "vue/valid-v-else-if": "error",
        "vue/valid-v-for": "error",
        "vue/valid-v-model": "error",
        "vue/no-custom-modifiers-on-v-model": "error",
        "vue/valid-v-on": "error",
        "vue/valid-v-show": "error",
        "vue/valid-v-slot": "error",
        "vue/no-multiple-template-root": "error",
        "vue/html-end-tags": "error",
        "vue/no-spaces-around-equal-signs-in-attribute": "error",
        "vue/no-template-shadow": "error",
        "vue/one-component-per-file": "error",
        "vue/component-tags-order": ["error", {
            "order": ["template", "script", "style"]
        }],
        "vue/no-multiple-slot-args": "error",
        "vue/block-lang": ["error", {
            "script": {
                "lang": "ts"
            },
            "style": {
                "lang": "scss"
            }
        }],
        "vue/component-name-in-template-casing": ["error", "kebab-case", {
            "registeredComponentsOnly": false
        }],
        "vue/custom-event-name-casing": ["error", "kebab-case"],
        "vue/html-comment-content-newline": ["error",
            {
                "singleline": "never",
                "multiline": "always"
            }
        ],
        "vue/html-comment-indent": ["error", 2],
        "vue/next-tick-style": ["error", "callback"],
        "vue/no-empty-component-block": "error",
        "vue/no-multiple-objects-in-class": "error",
        "vue/no-undef-properties": "error",
        "vue/no-unused-refs": "error",
        "vue/no-useless-mustaches": "error",
        "vue/padding-line-between-blocks": ["error", "always"],
        "vue/prefer-separate-static-class": "error",
        "vue/script-indent": ["error", 2, {
            "baseIndent": 0,
            "switchCase": 1
        }],
        "vue/v-for-delimiter-style": ["error", "in"],
        "vue/v-on-function-call": ["error", "never", {
            "ignoreIncludesComment": false
        }],
        // JSlint similar
        "vue/array-bracket-newline": ["error", "consistent"],
        "vue/array-bracket-spacing": ["error", "never"],
        "vue/arrow-spacing": ["error", {
            "before": true,
            "after": true
        }],
        "vue/block-spacing": ["error", "always"],
        "vue/brace-style": ["error", "1tbs", {
            "allowSingleLine": true
        }],
        "vue/camelcase": ["error", {
            "properties": "always",
            "ignoreDestructuring": true,
            "ignoreImports": true,
            "ignoreGlobals": true
        }],
        "vue/comma-dangle": ["off"], // TSlint prefer
        "vue/comma-spacing": ["error", {
            "before": false,
            "after": true
        }],
        "vue/comma-style": ["error", "last"],
        "vue/dot-location": ["error", "property"],
        "vue/eqeqeq": ["error", "always"],
        "vue/func-call-spacing": ["error", "never"],
        "vue/key-spacing": ["error", {
            "beforeColon": false,
            "afterColon": true,
            "mode": "strict"
        }],
        "vue/keyword-spacing": ["error"],
        "vue/max-len": ["error", {
            "code": 150,
            "template": 150,
            "tabWidth": 2,
            "comments": 150,
            "ignoreComments": false,
            "ignoreTrailingComments": false,
            "ignoreUrls": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreRegExpLiterals": true,
            "ignoreHTMLAttributeValues": true,
            "ignoreHTMLTextContents": false
        }],
        "vue/no-sparse-arrays": "error",
        "vue/object-curly-newline": ["error", {
            "ObjectExpression": {
                "multiline": true,
                "consistent": true
            },
            "ObjectPattern": {
                "multiline": true,
                "consistent": false
            },
            "ImportDeclaration": {
                "multiline": true,
                "consistent": true
            },
            "ExportDeclaration": {
                "multiline": true,
                "consistent": true
            }
        }],
        "vue/object-curly-spacing": ["error", "always", {
            "arraysInObjects": true,
            "objectsInObjects": false
        }],
        "vue/object-property-newline": ["error", {
            "allowAllPropertiesOnSameLine": true
        }],
        "vue/object-shorthand": ["error", "always"],
        "vue/operator-linebreak": ["error", "after", {
            "overrides": {
                "?": "before",
                ":": "before"
            }
        }],
        "vue/prefer-template": "error",
        "vue/quote-props": ["error", "consistent-as-needed"],
        "vue/space-in-parens": ["error", "never"],
        "vue/space-infix-ops": "error",
        "vue/space-unary-ops": ["error", {
            "words": true,
            "nonwords": false
        }],
        "vue/template-curly-spacing": "error",

        // JS lint
        // Vuelint similar
        "array-bracket-newline": ["error", "consistent"],
        "array-bracket-spacing": ["error", "never"],
        "arrow-spacing": ["error", {
            "before": true,
            "after": true
        }],
        "block-spacing": ["error", "always"],
        "brace-style": "off", // TSlint prefer
        "camelcase": ["error", {
            "properties": "always",
            "ignoreDestructuring": true,
            "ignoreImports": true,
            "ignoreGlobals": true
        }],
        "comma-dangle": ["error", {
            "arrays": "always-multiline",
            "objects": "always-multiline",
            "imports": "always-multiline",
            "exports": "always-multiline",
            "functions": "never"
        }],
        "comma-spacing": ["off"], // TSlint prefer
        "comma-style": ["error", "last"],
        "dot-location": ["error", "property"],
        "eqeqeq": ["error", "always"],
        "func-call-spacing": "off", // TSlint prefer
        "key-spacing": ["error", {
            "beforeColon": false,
            "afterColon": true,
            "mode": "strict"
        }],
        "keyword-spacing": "off", // TSlint prefer
        "max-len": ["error", {
            "code": 150,
            "tabWidth": 2,
            "comments": 150,
            "ignoreComments": false,
            "ignoreTrailingComments": false,
            "ignoreUrls": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreRegExpLiterals": true
        }],
        "no-sparse-arrays": "error",
        "object-curly-newline": ["error", {
            "ObjectExpression": {
                "multiline": true,
                "consistent": true
            },
            "ObjectPattern": {
                "multiline": true,
                "consistent": false
            },
            "ImportDeclaration": {
                "multiline": true,
                "consistent": true
            },
            "ExportDeclaration": {
                "multiline": true,
                "consistent": true
            }
        }],
        "object-curly-spacing": "off", // TSlint prefer
        "object-property-newline": ["error", {
            "allowAllPropertiesOnSameLine": true
        }],
        "object-shorthand": ["error", "always"],
        "operator-linebreak": ["error", "after", {
            "overrides": {
                "?": "before",
                ":": "before"
            }
        }],
        "prefer-template": "off", // => error?
        "quote-props": ["error", "consistent-as-needed"],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": "off", // TSlint prefer
        "space-unary-ops": ["error", {
            "words": true,
            "nonwords": false
        }],
        "template-curly-spacing": "error",

        // Possible Problems
        "array-callback-return": "error",
        "getter-return": ["error", {
            "allowImplicit": true
        }],
        "no-async-promise-executor": "error",
        "no-await-in-loop": "warn",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-const-assign": "error",
        "no-constant-binary-expression": "error",
        "no-constant-condition": "error",
        "no-constructor-return": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "off", // TSlint prefer
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-ex-assign": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "off",
        "no-loss-of-precision": "off", // TSlint prefer
        "no-misleading-character-class": "error",
        "no-new-symbol": "error",
        "no-obj-calls": "error",
        "no-promise-executor-return": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-setter-return": "error",
        "no-template-curly-in-string": "error",
        "no-this-before-super": "error",
        "no-undef": "error",
        "no-unexpected-multiline": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-private-class-members": "error",
        "no-unused-vars": "off", // TSlint prefer
        "no-use-before-define": "off", // TSlint prefer
        "no-useless-backreference": "error",
        "require-atomic-updates": "error",
        "use-isnan": "error",
        "valid-typeof": "error",

        // Suggestions
        "block-scoped-var": "error",
        "complexity": ["error", 10],
        "consistent-return": "error",
        "consistent-this": ["error", "that"],
        "curly": ["error", "all"],
        "default-case": "error",
        "default-case-last": "error",
        "func-names": ["error", "never"],
        "func-style": ["error", "declaration", {
            "allowArrowFunctions": true
        }],
        "guard-for-in": "error",
        "max-classes-per-file": "off", // => error?
        "multiline-comment-style": ["error", "separate-lines"],
        "no-alert": "error",
        "no-array-constructor": "off", // TSlint prefer
        "no-empty-function": "off", // TSlint prefer
        "no-extra-boolean-cast": ["error", {
            "enforceForLogicalOperands": true
        }],
        "no-unneeded-ternary": "error",
        "no-useless-concat": "error",
        "no-useless-escape": "error",
        "no-var": "error",
        "operator-assignment": "error",
        "prefer-const": "error",
        "prefer-destructuring": "error",
        "prefer-object-spread": "error",
        "prefer-spread": "error",
        "radix": "error",
        "require-await": "error",
        /*"sort-imports": ["error", { // => error
            "memberSyntaxSortOrder": ["none", "all", "single", "multiple"]
        }]*/
        "yoda": "error",

        // Layout & Formating
        "arrow-parens": "error",
        "computed-property-spacing": "error",
        "eol-last": ["error", "always"],
        "function-call-argument-newline": ["error", "consistent"],
        "function-paren-newline": ["error", "consistent"],
        "implicit-arrow-linebreak": "error",
        "indent": ["off"], // => customize
        "lines-between-class-members": "off", // TSlint prefer
        "max-statements-per-line": ["error", {
            "max": 2
        }],
        "newline-per-chained-call": ["error", {
            "ignoreChainWithDepth": 3
        }],
        "no-multiple-empty-lines": ["error", {
            "max": 1
        }],
        "no-trailing-spaces": "error",
        "no-whitespace-before-property": "error",
        "padded-blocks": ["error", "never"],
        "padding-line-between-statements": "off", // TSlint prefer
        "quotes": "off", // TSlint prefer
        "semi": "off", // TSlint prefer,
        "space-before-blocks": "off", // TSlint prefer
        "space-before-function-paren": "off" // TSlint prefer
    },
    "env": {
        "browser": true,
        "es6": true,
        "jquery": true,
        "node" : true
    }
}
